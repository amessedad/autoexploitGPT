import os
import json
import time
import requests

def fetch_cve_details(cve_id, retries=3, delay=5):
    url = f"https://services.nvd.nist.gov/rest/json/cves/2.0?cveId={cve_id}"
    for attempt in range(retries):
        response = requests.get(url)
        if response.status_code == 200:
            return response.json()
        elif response.status_code == 503:
            print(f"Service unavailable (503). Retrying in {delay} seconds...")
            time.sleep(delay)
        else:
            raise Exception(f"Failed to fetch CVE details: {response.status_code} - {response.text}")
    raise Exception("Exceeded maximum retry attempts to fetch CVE details.")

def upload_cve_details(client, cve_details, cve_id):
    try:
        print("Creating vector store...")
        vector_store = client.beta.vector_stores.create(name="CVE Details")
        print(f"Vector store created")

        cve_file = os.path.join("cve_details", f"{cve_id}_details.json")
        with open(cve_file, "w") as file:
            json.dump(cve_details, file)

        file_stream = open(cve_file, "rb")

        print("Uploading file to vector store...")
        file_batch = client.beta.vector_stores.file_batches.upload_and_poll(
            vector_store_id=vector_store.id, files=[file_stream]
        )
        print(f"File batch uploaded")
        
        return vector_store.id
    except Exception as e:
        print(f"Error uploading CVE details: {e}")
        raise
